






Started logging.

>>>
Content-Length: 3230

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":12124,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server562096675\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16735

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 322

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":409,"character":117},"end":{"line":409,"character":117}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 187

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 222

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"}}}
<<<
Content-Length: 11197

{"id":"3","jsonrpc":"2.0","result":[{"detail":"Servo","kind":13,"name":"MOTORservo","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":16,"line":22},"start":{"character":6,"line":22}}},{"detail":"const int","kind":13,"name":"Forward","range":{"end":{"character":28,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}},{"detail":"const int","kind":13,"name":"Backward","range":{"end":{"character":29,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":18,"line":25},"start":{"character":10,"line":25}}},{"detail":"const int","kind":13,"name":"Turn_Left","range":{"end":{"character":29,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}}},{"detail":"const int","kind":13,"name":"Turn_Right","range":{"end":{"character":29,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}},{"detail":"const int","kind":13,"name":"Top_Left","range":{"end":{"character":28,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}},{"detail":"const int","kind":13,"name":"Bottom_Left","range":{"end":{"character":29,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":10,"line":29}}},{"detail":"const int","kind":13,"name":"Top_Right","range":{"end":{"character":28,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":19,"line":30},"start":{"character":10,"line":30}}},{"detail":"const int","kind":13,"name":"Bottom_Right","range":{"end":{"character":28,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":22,"line":31},"start":{"character":10,"line":31}}},{"detail":"const int","kind":13,"name":"Stop","range":{"end":{"character":27,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":14,"line":32},"start":{"character":10,"line":32}}},{"detail":"const int","kind":13,"name":"Contrarotate","range":{"end":{"character":29,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":22,"line":33},"start":{"character":10,"line":33}}},{"detail":"const int","kind":13,"name":"Clockwise","range":{"end":{"character":28,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":10,"line":34}}},{"detail":"const int","kind":13,"name":"Moedl1","range":{"end":{"character":28,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}}},{"detail":"const int","kind":13,"name":"Moedl2","range":{"end":{"character":28,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}}},{"detail":"const int","kind":13,"name":"Moedl3","range":{"end":{"character":28,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}}},{"detail":"const int","kind":13,"name":"Moedl4","range":{"end":{"character":28,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}}},{"detail":"const int","kind":13,"name":"MotorLeft","range":{"end":{"character":29,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":19,"line":39},"start":{"character":10,"line":39}}},{"detail":"const int","kind":13,"name":"MotorRight","range":{"end":{"character":29,"line":40},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":20,"line":40},"start":{"character":10,"line":40}}},{"detail":"int","kind":13,"name":"Left_Tra_Value","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":18,"line":42},"start":{"character":4,"line":42}}},{"detail":"int","kind":13,"name":"Center_Tra_Value","range":{"end":{"character":20,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":20,"line":43},"start":{"character":4,"line":43}}},{"detail":"int","kind":13,"name":"Right_Tra_Value","range":{"end":{"character":19,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":19,"line":44},"start":{"character":4,"line":44}}},{"detail":"int","kind":13,"name":"Black_Line","range":{"end":{"character":20,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}}},{"detail":"int","kind":13,"name":"leftDistance","range":{"end":{"character":20,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":16,"line":47},"start":{"character":4,"line":47}}},{"detail":"int","kind":13,"name":"middleDistance","range":{"end":{"character":22,"line":48},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":18,"line":48},"start":{"character":4,"line":48}}},{"detail":"int","kind":13,"name":"rightDistance","range":{"end":{"character":21,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":17,"line":49},"start":{"character":4,"line":49}}},{"detail":"byte[3]","kind":13,"name":"RX_package","range":{"end":{"character":24,"line":51},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":15,"line":51},"start":{"character":5,"line":51}}},{"detail":"uint16_t","kind":13,"name":"angle","range":{"end":{"character":19,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":14,"line":52},"start":{"character":9,"line":52}}},{"detail":"byte","kind":13,"name":"order","range":{"end":{"character":17,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":10,"line":53},"start":{"character":5,"line":53}}},{"detail":"char","kind":13,"name":"model_var","range":{"end":{"character":18,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":14,"line":54},"start":{"character":5,"line":54}}},{"detail":"int","kind":13,"name":"UT_distance","range":{"end":{"character":19,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":15,"line":55},"start":{"character":4,"line":55}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":60},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":9,"line":60},"start":{"character":5,"line":60}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":29,"line":62},"start":{"character":0,"line":62}},"selectionRange":{"end":{"character":16,"line":62},"start":{"character":5,"line":62}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":18,"line":64},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":16,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":18,"line":66},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":16,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":18,"line":68},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":16,"line":68},"start":{"character":5,"line":68}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":16,"line":70},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":14,"line":70},"start":{"character":5,"line":70}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":17,"line":72},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":15,"line":72},"start":{"character":5,"line":72}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":30,"line":74},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":10,"line":74},"start":{"character":5,"line":74}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":30,"line":76},"start":{"character":0,"line":76}},"selectionRange":{"end":{"character":10,"line":76},"start":{"character":6,"line":76}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":18,"line":78},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":16,"line":78},"start":{"character":5,"line":78}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":104},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":10,"line":80},"start":{"character":5,"line":80}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":106}},"selectionRange":{"end":{"character":9,"line":106},"start":{"character":5,"line":106}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":1,"line":173},"start":{"character":0,"line":127}},"selectionRange":{"end":{"character":16,"line":127},"start":{"character":5,"line":127}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":175}},"selectionRange":{"end":{"character":16,"line":175},"start":{"character":5,"line":175}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":1,"line":330},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":16,"line":305},"start":{"character":5,"line":305}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":1,"line":362},"start":{"character":0,"line":332}},"selectionRange":{"end":{"character":16,"line":332},"start":{"character":5,"line":332}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":1,"line":369},"start":{"character":0,"line":363}},"selectionRange":{"end":{"character":14,"line":363},"start":{"character":5,"line":363}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":1,"line":376},"start":{"character":0,"line":370}},"selectionRange":{"end":{"character":15,"line":370},"start":{"character":5,"line":370}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":1,"line":387},"start":{"character":0,"line":378}},"selectionRange":{"end":{"character":10,"line":378},"start":{"character":5,"line":378}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":1,"line":400},"start":{"character":0,"line":389}},"selectionRange":{"end":{"character":10,"line":389},"start":{"character":6,"line":389}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":402}},"selectionRange":{"end":{"character":16,"line":402},"start":{"character":5,"line":402}}}]}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":338,"character":88}}}
<<<
Content-Length: 254

{"id":"4","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Right_Tra_Value`  \n\n---\nType: `int`  \n\n---\n```cpp\nint Right_Tra_Value\n```"},"range":{"end":{"character":88,"line":338},"start":{"character":73,"line":338}}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":342,"character":88}}}
<<<
Content-Length: 254

{"id":"5","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Right_Tra_Value`  \n\n---\nType: `int`  \n\n---\n```cpp\nint Right_Tra_Value\n```"},"range":{"end":{"character":94,"line":342},"start":{"character":79,"line":342}}}}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":68}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":29,"character":54}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":"8","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":87,"character":30},"end":{"line":87,"character":30}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"8","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"9","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":106,"character":11},"end":{"line":106,"character":11}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"9","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":42}}}
<<<
Content-Length: 41

{"id":"10","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":45}}}
<<<
Content-Length: 41

{"id":"11","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":11,"character":41}}}
<<<
Content-Length: 41

{"id":"12","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server562096675/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":19,"character":18}}}
<<<
Content-Length: 244

{"id":"13","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `CENTER_LINE_TRACJING`  \n\n---\n```cpp\n#define CENTER_LINE_TRACJING A1\n```"},"range":{"end":{"character":28,"line":19},"start":{"character":8,"line":19}}}}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"14","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"14","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3232

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":12124,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server1379261416\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16736

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 321

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":106,"character":11},"end":{"line":106,"character":11}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 188

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 3112

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"drv_unknown_argument","message":"Unknown argument: '-mfix-esp32-psram-cache-issue'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name '_read'","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":40,"line":194},"start":{"character":35,"line":194}},"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"pp_hash_error","message":"In included file: \"This library only supports boards with an AVR, SAM, SAMD, NRF52 or STM32F4 processor.\"","range":{"end":{"character":13,"line":2},"start":{"character":12,"line":2}},"relatedInformation":[{"location":{"range":{"end":{"character":6,"line":76},"start":{"character":1,"line":76}},"uri":"file:///D:/Arduino/libraries/Servo/src/Servo.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A1'","range":{"end":{"character":32,"line":98},"start":{"character":12,"line":98}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A2'","range":{"end":{"character":31,"line":99},"start":{"character":12,"line":99}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A1'","range":{"end":{"character":54,"line":336},"start":{"character":34,"line":336}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A2'","range":{"end":{"character":52,"line":337},"start":{"character":33,"line":337}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'analogWrite'","range":{"end":{"character":15,"line":381},"start":{"character":4,"line":381}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'analogWrite'","range":{"end":{"character":15,"line":382},"start":{"character":4,"line":382}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/39","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/39","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/39","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/39","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/39","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/39","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/39","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/39","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/39","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/39","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/39","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/39","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/39","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/39","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/39","percentage":23}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/39","percentage":23}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/39","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/39","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/39","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/39","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/39","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/39","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/39","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/39","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/39","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/39","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/39","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/39","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/39","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/39","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/39","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/39","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/39","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/39","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/39","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/39","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/39","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/39","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/39","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/39","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/39","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/39","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/39","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/39","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/39","percentage":61}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/39","percentage":61}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/39","percentage":64}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/39","percentage":64}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/39","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/39","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/39","percentage":69}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/39","percentage":69}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/39","percentage":71}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/39","percentage":71}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/39","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/39","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/39","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/39","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/39","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/39","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/39","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/39","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/39","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/39","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/39","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/39","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/39","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/39","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/39","percentage":97}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":29,"character":65}}}
<<<
Content-Length: 40

{"id":"3","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":25,"character":54}}}
<<<
Content-Length: 40

{"id":"4","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":24,"character":55}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":30,"character":48}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16740

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1379261416/sketch/6.2_Arduino_UNO.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"G:\\\\11.ZhiYi\\\\5.Tutorial\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 60

{"jsonrpc":"2.0","id":"7","method":"shutdown","params":null}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3233

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":11276,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server1586237785\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16554

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 315

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 188

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 223

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 216

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"}}}
<<<
Content-Length: 11197

{"id":"3","jsonrpc":"2.0","result":[{"detail":"Servo","kind":13,"name":"MOTORservo","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":16,"line":22},"start":{"character":6,"line":22}}},{"detail":"const int","kind":13,"name":"Forward","range":{"end":{"character":28,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}},{"detail":"const int","kind":13,"name":"Backward","range":{"end":{"character":29,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":18,"line":25},"start":{"character":10,"line":25}}},{"detail":"const int","kind":13,"name":"Turn_Left","range":{"end":{"character":29,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}}},{"detail":"const int","kind":13,"name":"Turn_Right","range":{"end":{"character":29,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}},{"detail":"const int","kind":13,"name":"Top_Left","range":{"end":{"character":28,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}},{"detail":"const int","kind":13,"name":"Bottom_Left","range":{"end":{"character":29,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":10,"line":29}}},{"detail":"const int","kind":13,"name":"Top_Right","range":{"end":{"character":28,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":19,"line":30},"start":{"character":10,"line":30}}},{"detail":"const int","kind":13,"name":"Bottom_Right","range":{"end":{"character":28,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":22,"line":31},"start":{"character":10,"line":31}}},{"detail":"const int","kind":13,"name":"Stop","range":{"end":{"character":27,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":14,"line":32},"start":{"character":10,"line":32}}},{"detail":"const int","kind":13,"name":"Contrarotate","range":{"end":{"character":29,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":22,"line":33},"start":{"character":10,"line":33}}},{"detail":"const int","kind":13,"name":"Clockwise","range":{"end":{"character":28,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":10,"line":34}}},{"detail":"const int","kind":13,"name":"Moedl1","range":{"end":{"character":28,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}}},{"detail":"const int","kind":13,"name":"Moedl2","range":{"end":{"character":28,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}}},{"detail":"const int","kind":13,"name":"Moedl3","range":{"end":{"character":28,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}}},{"detail":"const int","kind":13,"name":"Moedl4","range":{"end":{"character":28,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}}},{"detail":"const int","kind":13,"name":"MotorLeft","range":{"end":{"character":29,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":19,"line":39},"start":{"character":10,"line":39}}},{"detail":"const int","kind":13,"name":"MotorRight","range":{"end":{"character":29,"line":40},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":20,"line":40},"start":{"character":10,"line":40}}},{"detail":"int","kind":13,"name":"Left_Tra_Value","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":18,"line":42},"start":{"character":4,"line":42}}},{"detail":"int","kind":13,"name":"Center_Tra_Value","range":{"end":{"character":20,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":20,"line":43},"start":{"character":4,"line":43}}},{"detail":"int","kind":13,"name":"Right_Tra_Value","range":{"end":{"character":19,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":19,"line":44},"start":{"character":4,"line":44}}},{"detail":"int","kind":13,"name":"Black_Line","range":{"end":{"character":20,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}}},{"detail":"int","kind":13,"name":"leftDistance","range":{"end":{"character":20,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":16,"line":47},"start":{"character":4,"line":47}}},{"detail":"int","kind":13,"name":"middleDistance","range":{"end":{"character":22,"line":48},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":18,"line":48},"start":{"character":4,"line":48}}},{"detail":"int","kind":13,"name":"rightDistance","range":{"end":{"character":21,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":17,"line":49},"start":{"character":4,"line":49}}},{"detail":"byte[3]","kind":13,"name":"RX_package","range":{"end":{"character":24,"line":51},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":15,"line":51},"start":{"character":5,"line":51}}},{"detail":"uint16_t","kind":13,"name":"angle","range":{"end":{"character":19,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":14,"line":52},"start":{"character":9,"line":52}}},{"detail":"byte","kind":13,"name":"order","range":{"end":{"character":17,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":10,"line":53},"start":{"character":5,"line":53}}},{"detail":"char","kind":13,"name":"model_var","range":{"end":{"character":18,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":14,"line":54},"start":{"character":5,"line":54}}},{"detail":"int","kind":13,"name":"UT_distance","range":{"end":{"character":19,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":15,"line":55},"start":{"character":4,"line":55}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":60},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":9,"line":60},"start":{"character":5,"line":60}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":29,"line":62},"start":{"character":0,"line":62}},"selectionRange":{"end":{"character":16,"line":62},"start":{"character":5,"line":62}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":18,"line":64},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":16,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":18,"line":66},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":16,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":18,"line":68},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":16,"line":68},"start":{"character":5,"line":68}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":16,"line":70},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":14,"line":70},"start":{"character":5,"line":70}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":17,"line":72},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":15,"line":72},"start":{"character":5,"line":72}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":30,"line":74},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":10,"line":74},"start":{"character":5,"line":74}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":30,"line":76},"start":{"character":0,"line":76}},"selectionRange":{"end":{"character":10,"line":76},"start":{"character":6,"line":76}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":18,"line":78},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":16,"line":78},"start":{"character":5,"line":78}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":104},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":10,"line":80},"start":{"character":5,"line":80}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":106}},"selectionRange":{"end":{"character":9,"line":106},"start":{"character":5,"line":106}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":1,"line":173},"start":{"character":0,"line":127}},"selectionRange":{"end":{"character":16,"line":127},"start":{"character":5,"line":127}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":175}},"selectionRange":{"end":{"character":16,"line":175},"start":{"character":5,"line":175}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":1,"line":330},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":16,"line":305},"start":{"character":5,"line":305}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":1,"line":362},"start":{"character":0,"line":332}},"selectionRange":{"end":{"character":16,"line":332},"start":{"character":5,"line":332}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":1,"line":369},"start":{"character":0,"line":363}},"selectionRange":{"end":{"character":14,"line":363},"start":{"character":5,"line":363}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":1,"line":376},"start":{"character":0,"line":370}},"selectionRange":{"end":{"character":15,"line":370},"start":{"character":5,"line":370}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":1,"line":387},"start":{"character":0,"line":378}},"selectionRange":{"end":{"character":10,"line":378},"start":{"character":5,"line":378}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":1,"line":400},"start":{"character":0,"line":389}},"selectionRange":{"end":{"character":10,"line":389},"start":{"character":6,"line":389}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":402}},"selectionRange":{"end":{"character":16,"line":402},"start":{"character":5,"line":402}}}]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 256

{"jsonrpc":"2.0","id":"4","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":9,"character":21}}}
<<<
Content-Length: 38

{"id":"4","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":"5","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":9,"character":21},"end":{"line":9,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"5","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":10,"character":25}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"jsonrpc":"2.0","id":"7","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":9,"character":21}}}
<<<
Content-Length: 38

{"id":"7","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":"8","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":9,"character":21},"end":{"line":9,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"8","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"jsonrpc":"2.0","id":"9","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":11,"character":71}}}
<<<
Content-Length: 38

{"id":"9","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"10","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":11,"character":71},"end":{"line":11,"character":71}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"10","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":11,"character":71}}}
<<<
Content-Length: 41

{"id":"11","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":10,"character":66}}}
<<<
Content-Length: 41

{"id":"12","jsonrpc":"2.0","result":null}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":6,"character":17}}}
<<<
Content-Length: 41

{"id":"13","jsonrpc":"2.0","result":null}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":12,"character":68}}}
<<<
Content-Length: 41

{"id":"14","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":66}}}
<<<
Content-Length: 41

{"id":"15","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1586237785/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":64}}}
<<<
Content-Length: 41

{"id":"16","jsonrpc":"2.0","result":null}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"17","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"17","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3233

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25076,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server2805242055\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16554

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":11,"character":71},"end":{"line":11,"character":71}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 188

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 223

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 216

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"}}}
<<<
Content-Length: 11197

{"id":"3","jsonrpc":"2.0","result":[{"detail":"Servo","kind":13,"name":"MOTORservo","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":16,"line":22},"start":{"character":6,"line":22}}},{"detail":"const int","kind":13,"name":"Forward","range":{"end":{"character":28,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}},{"detail":"const int","kind":13,"name":"Backward","range":{"end":{"character":29,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":18,"line":25},"start":{"character":10,"line":25}}},{"detail":"const int","kind":13,"name":"Turn_Left","range":{"end":{"character":29,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}}},{"detail":"const int","kind":13,"name":"Turn_Right","range":{"end":{"character":29,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}},{"detail":"const int","kind":13,"name":"Top_Left","range":{"end":{"character":28,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}},{"detail":"const int","kind":13,"name":"Bottom_Left","range":{"end":{"character":29,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":10,"line":29}}},{"detail":"const int","kind":13,"name":"Top_Right","range":{"end":{"character":28,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":19,"line":30},"start":{"character":10,"line":30}}},{"detail":"const int","kind":13,"name":"Bottom_Right","range":{"end":{"character":28,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":22,"line":31},"start":{"character":10,"line":31}}},{"detail":"const int","kind":13,"name":"Stop","range":{"end":{"character":27,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":14,"line":32},"start":{"character":10,"line":32}}},{"detail":"const int","kind":13,"name":"Contrarotate","range":{"end":{"character":29,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":22,"line":33},"start":{"character":10,"line":33}}},{"detail":"const int","kind":13,"name":"Clockwise","range":{"end":{"character":28,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":10,"line":34}}},{"detail":"const int","kind":13,"name":"Moedl1","range":{"end":{"character":28,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}}},{"detail":"const int","kind":13,"name":"Moedl2","range":{"end":{"character":28,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}}},{"detail":"const int","kind":13,"name":"Moedl3","range":{"end":{"character":28,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}}},{"detail":"const int","kind":13,"name":"Moedl4","range":{"end":{"character":28,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}}},{"detail":"const int","kind":13,"name":"MotorLeft","range":{"end":{"character":29,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":19,"line":39},"start":{"character":10,"line":39}}},{"detail":"const int","kind":13,"name":"MotorRight","range":{"end":{"character":29,"line":40},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":20,"line":40},"start":{"character":10,"line":40}}},{"detail":"int","kind":13,"name":"Left_Tra_Value","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":18,"line":42},"start":{"character":4,"line":42}}},{"detail":"int","kind":13,"name":"Center_Tra_Value","range":{"end":{"character":20,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":20,"line":43},"start":{"character":4,"line":43}}},{"detail":"int","kind":13,"name":"Right_Tra_Value","range":{"end":{"character":19,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":19,"line":44},"start":{"character":4,"line":44}}},{"detail":"int","kind":13,"name":"Black_Line","range":{"end":{"character":20,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}}},{"detail":"int","kind":13,"name":"leftDistance","range":{"end":{"character":20,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":16,"line":47},"start":{"character":4,"line":47}}},{"detail":"int","kind":13,"name":"middleDistance","range":{"end":{"character":22,"line":48},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":18,"line":48},"start":{"character":4,"line":48}}},{"detail":"int","kind":13,"name":"rightDistance","range":{"end":{"character":21,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":17,"line":49},"start":{"character":4,"line":49}}},{"detail":"byte[3]","kind":13,"name":"RX_package","range":{"end":{"character":24,"line":51},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":15,"line":51},"start":{"character":5,"line":51}}},{"detail":"uint16_t","kind":13,"name":"angle","range":{"end":{"character":19,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":14,"line":52},"start":{"character":9,"line":52}}},{"detail":"byte","kind":13,"name":"order","range":{"end":{"character":17,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":10,"line":53},"start":{"character":5,"line":53}}},{"detail":"char","kind":13,"name":"model_var","range":{"end":{"character":18,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":14,"line":54},"start":{"character":5,"line":54}}},{"detail":"int","kind":13,"name":"UT_distance","range":{"end":{"character":19,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":15,"line":55},"start":{"character":4,"line":55}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":60},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":9,"line":60},"start":{"character":5,"line":60}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":29,"line":62},"start":{"character":0,"line":62}},"selectionRange":{"end":{"character":16,"line":62},"start":{"character":5,"line":62}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":18,"line":64},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":16,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":18,"line":66},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":16,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":18,"line":68},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":16,"line":68},"start":{"character":5,"line":68}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":16,"line":70},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":14,"line":70},"start":{"character":5,"line":70}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":17,"line":72},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":15,"line":72},"start":{"character":5,"line":72}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":30,"line":74},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":10,"line":74},"start":{"character":5,"line":74}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":30,"line":76},"start":{"character":0,"line":76}},"selectionRange":{"end":{"character":10,"line":76},"start":{"character":6,"line":76}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":18,"line":78},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":16,"line":78},"start":{"character":5,"line":78}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":104},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":10,"line":80},"start":{"character":5,"line":80}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":106}},"selectionRange":{"end":{"character":9,"line":106},"start":{"character":5,"line":106}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":1,"line":173},"start":{"character":0,"line":127}},"selectionRange":{"end":{"character":16,"line":127},"start":{"character":5,"line":127}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":175}},"selectionRange":{"end":{"character":16,"line":175},"start":{"character":5,"line":175}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":1,"line":330},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":16,"line":305},"start":{"character":5,"line":305}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":1,"line":362},"start":{"character":0,"line":332}},"selectionRange":{"end":{"character":16,"line":332},"start":{"character":5,"line":332}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":1,"line":369},"start":{"character":0,"line":363}},"selectionRange":{"end":{"character":14,"line":363},"start":{"character":5,"line":363}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":1,"line":376},"start":{"character":0,"line":370}},"selectionRange":{"end":{"character":15,"line":370},"start":{"character":5,"line":370}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":1,"line":387},"start":{"character":0,"line":378}},"selectionRange":{"end":{"character":10,"line":378},"start":{"character":5,"line":378}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":1,"line":400},"start":{"character":0,"line":389}},"selectionRange":{"end":{"character":10,"line":389},"start":{"character":6,"line":389}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":402}},"selectionRange":{"end":{"character":16,"line":402},"start":{"character":5,"line":402}}}]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":71}}}
<<<
Content-Length: 40

{"id":"4","jsonrpc":"2.0","result":null}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}Content-Length: 245

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":12,"character":41}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 257

{"jsonrpc":"2.0","id":"6","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":16,"character":30}}}
<<<
Content-Length: 38

{"id":"6","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"7","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"7","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server2805242055/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":10,"character":48}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 60


<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
{"jsonrpc":"2.0","id":"9","method":"shutdown","params":null}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3233

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":14936,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server1873315705\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16554

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 188

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 223

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 216

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"}}}
<<<
Content-Length: 11197

{"id":"3","jsonrpc":"2.0","result":[{"detail":"Servo","kind":13,"name":"MOTORservo","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":16,"line":22},"start":{"character":6,"line":22}}},{"detail":"const int","kind":13,"name":"Forward","range":{"end":{"character":28,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}},{"detail":"const int","kind":13,"name":"Backward","range":{"end":{"character":29,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":18,"line":25},"start":{"character":10,"line":25}}},{"detail":"const int","kind":13,"name":"Turn_Left","range":{"end":{"character":29,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}}},{"detail":"const int","kind":13,"name":"Turn_Right","range":{"end":{"character":29,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}},{"detail":"const int","kind":13,"name":"Top_Left","range":{"end":{"character":28,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}},{"detail":"const int","kind":13,"name":"Bottom_Left","range":{"end":{"character":29,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":10,"line":29}}},{"detail":"const int","kind":13,"name":"Top_Right","range":{"end":{"character":28,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":19,"line":30},"start":{"character":10,"line":30}}},{"detail":"const int","kind":13,"name":"Bottom_Right","range":{"end":{"character":28,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":22,"line":31},"start":{"character":10,"line":31}}},{"detail":"const int","kind":13,"name":"Stop","range":{"end":{"character":27,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":14,"line":32},"start":{"character":10,"line":32}}},{"detail":"const int","kind":13,"name":"Contrarotate","range":{"end":{"character":29,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":22,"line":33},"start":{"character":10,"line":33}}},{"detail":"const int","kind":13,"name":"Clockwise","range":{"end":{"character":28,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":10,"line":34}}},{"detail":"const int","kind":13,"name":"Moedl1","range":{"end":{"character":28,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}}},{"detail":"const int","kind":13,"name":"Moedl2","range":{"end":{"character":28,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}}},{"detail":"const int","kind":13,"name":"Moedl3","range":{"end":{"character":28,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}}},{"detail":"const int","kind":13,"name":"Moedl4","range":{"end":{"character":28,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}}},{"detail":"const int","kind":13,"name":"MotorLeft","range":{"end":{"character":29,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":19,"line":39},"start":{"character":10,"line":39}}},{"detail":"const int","kind":13,"name":"MotorRight","range":{"end":{"character":29,"line":40},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":20,"line":40},"start":{"character":10,"line":40}}},{"detail":"int","kind":13,"name":"Left_Tra_Value","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":18,"line":42},"start":{"character":4,"line":42}}},{"detail":"int","kind":13,"name":"Center_Tra_Value","range":{"end":{"character":20,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":20,"line":43},"start":{"character":4,"line":43}}},{"detail":"int","kind":13,"name":"Right_Tra_Value","range":{"end":{"character":19,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":19,"line":44},"start":{"character":4,"line":44}}},{"detail":"int","kind":13,"name":"Black_Line","range":{"end":{"character":20,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}}},{"detail":"int","kind":13,"name":"leftDistance","range":{"end":{"character":20,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":16,"line":47},"start":{"character":4,"line":47}}},{"detail":"int","kind":13,"name":"middleDistance","range":{"end":{"character":22,"line":48},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":18,"line":48},"start":{"character":4,"line":48}}},{"detail":"int","kind":13,"name":"rightDistance","range":{"end":{"character":21,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":17,"line":49},"start":{"character":4,"line":49}}},{"detail":"byte[3]","kind":13,"name":"RX_package","range":{"end":{"character":24,"line":51},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":15,"line":51},"start":{"character":5,"line":51}}},{"detail":"uint16_t","kind":13,"name":"angle","range":{"end":{"character":19,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":14,"line":52},"start":{"character":9,"line":52}}},{"detail":"byte","kind":13,"name":"order","range":{"end":{"character":17,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":10,"line":53},"start":{"character":5,"line":53}}},{"detail":"char","kind":13,"name":"model_var","range":{"end":{"character":18,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":14,"line":54},"start":{"character":5,"line":54}}},{"detail":"int","kind":13,"name":"UT_distance","range":{"end":{"character":19,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":15,"line":55},"start":{"character":4,"line":55}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":60},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":9,"line":60},"start":{"character":5,"line":60}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":29,"line":62},"start":{"character":0,"line":62}},"selectionRange":{"end":{"character":16,"line":62},"start":{"character":5,"line":62}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":18,"line":64},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":16,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":18,"line":66},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":16,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":18,"line":68},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":16,"line":68},"start":{"character":5,"line":68}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":16,"line":70},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":14,"line":70},"start":{"character":5,"line":70}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":17,"line":72},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":15,"line":72},"start":{"character":5,"line":72}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":30,"line":74},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":10,"line":74},"start":{"character":5,"line":74}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":30,"line":76},"start":{"character":0,"line":76}},"selectionRange":{"end":{"character":10,"line":76},"start":{"character":6,"line":76}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":18,"line":78},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":16,"line":78},"start":{"character":5,"line":78}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":104},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":10,"line":80},"start":{"character":5,"line":80}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":106}},"selectionRange":{"end":{"character":9,"line":106},"start":{"character":5,"line":106}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":1,"line":173},"start":{"character":0,"line":127}},"selectionRange":{"end":{"character":16,"line":127},"start":{"character":5,"line":127}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":175}},"selectionRange":{"end":{"character":16,"line":175},"start":{"character":5,"line":175}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":1,"line":330},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":16,"line":305},"start":{"character":5,"line":305}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":1,"line":362},"start":{"character":0,"line":332}},"selectionRange":{"end":{"character":16,"line":332},"start":{"character":5,"line":332}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":1,"line":369},"start":{"character":0,"line":363}},"selectionRange":{"end":{"character":14,"line":363},"start":{"character":5,"line":363}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":1,"line":376},"start":{"character":0,"line":370}},"selectionRange":{"end":{"character":15,"line":370},"start":{"character":5,"line":370}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":1,"line":387},"start":{"character":0,"line":378}},"selectionRange":{"end":{"character":10,"line":378},"start":{"character":5,"line":378}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":1,"line":400},"start":{"character":0,"line":389}},"selectionRange":{"end":{"character":10,"line":389},"start":{"character":6,"line":389}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":402}},"selectionRange":{"end":{"character":16,"line":402},"start":{"character":5,"line":402}}}]}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}
>>>
Content-Length: 257

{"jsonrpc":"2.0","id":"4","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":18,"character":34}}}
<<<
Content-Length: 38

{"id":"4","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 216

{"jsonrpc":"2.0","id":"5","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"}}}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 11197

{"id":"5","jsonrpc":"2.0","result":[{"detail":"Servo","kind":13,"name":"MOTORservo","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":16,"line":22},"start":{"character":6,"line":22}}},{"detail":"const int","kind":13,"name":"Forward","range":{"end":{"character":28,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}},{"detail":"const int","kind":13,"name":"Backward","range":{"end":{"character":29,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":18,"line":25},"start":{"character":10,"line":25}}},{"detail":"const int","kind":13,"name":"Turn_Left","range":{"end":{"character":29,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}}},{"detail":"const int","kind":13,"name":"Turn_Right","range":{"end":{"character":29,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}},{"detail":"const int","kind":13,"name":"Top_Left","range":{"end":{"character":28,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}},{"detail":"const int","kind":13,"name":"Bottom_Left","range":{"end":{"character":29,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":10,"line":29}}},{"detail":"const int","kind":13,"name":"Top_Right","range":{"end":{"character":28,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":19,"line":30},"start":{"character":10,"line":30}}},{"detail":"const int","kind":13,"name":"Bottom_Right","range":{"end":{"character":28,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":22,"line":31},"start":{"character":10,"line":31}}},{"detail":"const int","kind":13,"name":"Stop","range":{"end":{"character":27,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":14,"line":32},"start":{"character":10,"line":32}}},{"detail":"const int","kind":13,"name":"Contrarotate","range":{"end":{"character":29,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":22,"line":33},"start":{"character":10,"line":33}}},{"detail":"const int","kind":13,"name":"Clockwise","range":{"end":{"character":28,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":10,"line":34}}},{"detail":"const int","kind":13,"name":"Moedl1","range":{"end":{"character":28,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}}},{"detail":"const int","kind":13,"name":"Moedl2","range":{"end":{"character":28,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}}},{"detail":"const int","kind":13,"name":"Moedl3","range":{"end":{"character":28,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}}},{"detail":"const int","kind":13,"name":"Moedl4","range":{"end":{"character":28,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}}},{"detail":"const int","kind":13,"name":"MotorLeft","range":{"end":{"character":29,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":19,"line":39},"start":{"character":10,"line":39}}},{"detail":"const int","kind":13,"name":"MotorRight","range":{"end":{"character":29,"line":40},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":20,"line":40},"start":{"character":10,"line":40}}},{"detail":"int","kind":13,"name":"Left_Tra_Value","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":18,"line":42},"start":{"character":4,"line":42}}},{"detail":"int","kind":13,"name":"Center_Tra_Value","range":{"end":{"character":20,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":20,"line":43},"start":{"character":4,"line":43}}},{"detail":"int","kind":13,"name":"Right_Tra_Value","range":{"end":{"character":19,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":19,"line":44},"start":{"character":4,"line":44}}},{"detail":"int","kind":13,"name":"Black_Line","range":{"end":{"character":20,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}}},{"detail":"int","kind":13,"name":"leftDistance","range":{"end":{"character":20,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":16,"line":47},"start":{"character":4,"line":47}}},{"detail":"int","kind":13,"name":"middleDistance","range":{"end":{"character":22,"line":48},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":18,"line":48},"start":{"character":4,"line":48}}},{"detail":"int","kind":13,"name":"rightDistance","range":{"end":{"character":21,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":17,"line":49},"start":{"character":4,"line":49}}},{"detail":"byte[3]","kind":13,"name":"RX_package","range":{"end":{"character":24,"line":51},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":15,"line":51},"start":{"character":5,"line":51}}},{"detail":"uint16_t","kind":13,"name":"angle","range":{"end":{"character":19,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":14,"line":52},"start":{"character":9,"line":52}}},{"detail":"byte","kind":13,"name":"order","range":{"end":{"character":17,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":10,"line":53},"start":{"character":5,"line":53}}},{"detail":"char","kind":13,"name":"model_var","range":{"end":{"character":18,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":14,"line":54},"start":{"character":5,"line":54}}},{"detail":"int","kind":13,"name":"UT_distance","range":{"end":{"character":19,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":15,"line":55},"start":{"character":4,"line":55}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":60},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":9,"line":60},"start":{"character":5,"line":60}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":29,"line":62},"start":{"character":0,"line":62}},"selectionRange":{"end":{"character":16,"line":62},"start":{"character":5,"line":62}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":18,"line":64},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":16,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":18,"line":66},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":16,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":18,"line":68},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":16,"line":68},"start":{"character":5,"line":68}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":16,"line":70},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":14,"line":70},"start":{"character":5,"line":70}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":17,"line":72},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":15,"line":72},"start":{"character":5,"line":72}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":30,"line":74},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":10,"line":74},"start":{"character":5,"line":74}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":30,"line":76},"start":{"character":0,"line":76}},"selectionRange":{"end":{"character":10,"line":76},"start":{"character":6,"line":76}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":18,"line":78},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":16,"line":78},"start":{"character":5,"line":78}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":104},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":10,"line":80},"start":{"character":5,"line":80}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":106}},"selectionRange":{"end":{"character":9,"line":106},"start":{"character":5,"line":106}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":1,"line":173},"start":{"character":0,"line":127}},"selectionRange":{"end":{"character":16,"line":127},"start":{"character":5,"line":127}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":175}},"selectionRange":{"end":{"character":16,"line":175},"start":{"character":5,"line":175}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":1,"line":330},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":16,"line":305},"start":{"character":5,"line":305}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":1,"line":362},"start":{"character":0,"line":332}},"selectionRange":{"end":{"character":16,"line":332},"start":{"character":5,"line":332}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":1,"line":369},"start":{"character":0,"line":363}},"selectionRange":{"end":{"character":14,"line":363},"start":{"character":5,"line":363}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":1,"line":376},"start":{"character":0,"line":370}},"selectionRange":{"end":{"character":15,"line":370},"start":{"character":5,"line":370}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":1,"line":387},"start":{"character":0,"line":378}},"selectionRange":{"end":{"character":10,"line":378},"start":{"character":5,"line":378}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":1,"line":400},"start":{"character":0,"line":389}},"selectionRange":{"end":{"character":10,"line":389},"start":{"character":6,"line":389}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":402}},"selectionRange":{"end":{"character":16,"line":402},"start":{"character":5,"line":402}}}]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"6","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":18,"character":34},"end":{"line":18,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"6","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":8,"character":18}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 257

{"jsonrpc":"2.0","id":"8","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":11,"character":78}}}
<<<
Content-Length: 38

{"id":"8","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"9","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":11,"character":78},"end":{"line":11,"character":78}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"9","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":84}}}
<<<
Content-Length: 41

{"id":"10","jsonrpc":"2.0","result":null}
>>>
Content-Length: 258

{"jsonrpc":"2.0","id":"11","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":84}}}
<<<
Content-Length: 39

{"id":"11","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"12","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":13,"character":84},"end":{"line":13,"character":84}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"12","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"jsonrpc":"2.0","id":"13","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":8,"character":29}}}
<<<
Content-Length: 39

{"id":"13","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":"14","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":8,"character":29},"end":{"line":8,"character":29}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"14","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 258

{"jsonrpc":"2.0","id":"15","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":16,"character":30}}}
<<<
Content-Length: 39

{"id":"15","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"16","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"16","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 258

{"jsonrpc":"2.0","id":"17","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":18,"character":34}}}
<<<
Content-Length: 39

{"id":"17","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"18","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":18,"character":34},"end":{"line":18,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"18","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":"19","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"19","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 258

{"jsonrpc":"2.0","id":"20","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":18,"character":34}}}
<<<
Content-Length: 39

{"id":"20","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"21","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":18,"character":34},"end":{"line":18,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"21","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"22","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server1873315705/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":22,"character":17},"end":{"line":22,"character":17}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"22","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"23","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"23","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3233

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":14936,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server3189514816\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16554

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 245

{"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":46}}}
<<<
Content-Length: 188

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/39","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/39","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/39","percentage":5}}}Content-Length: 3112

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"drv_unknown_argument","message":"Unknown argument: '-mfix-esp32-psram-cache-issue'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name '_read'","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":40,"line":194},"start":{"character":35,"line":194}},"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"pp_hash_error","message":"In included file: \"This library only supports boards with an AVR, SAM, SAMD, NRF52 or STM32F4 processor.\"","range":{"end":{"character":13,"line":2},"start":{"character":12,"line":2}},"relatedInformation":[{"location":{"range":{"end":{"character":6,"line":76},"start":{"character":1,"line":76}},"uri":"file:///D:/Arduino/libraries/Servo/src/Servo.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A1'","range":{"end":{"character":32,"line":98},"start":{"character":12,"line":98}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A2'","range":{"end":{"character":31,"line":99},"start":{"character":12,"line":99}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A1'","range":{"end":{"character":54,"line":336},"start":{"character":34,"line":336}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'A2'","range":{"end":{"character":52,"line":337},"start":{"character":33,"line":337}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'analogWrite'","range":{"end":{"character":15,"line":381},"start":{"character":4,"line":381}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'analogWrite'","range":{"end":{"character":15,"line":382},"start":{"character":4,"line":382}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 40

{"id":"2","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":13,"character":42}}}
<<<
Content-Length: 40

{"id":"3","jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":12,"character":8}}}
<<<
Content-Length: 218

{"id":"4","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `DATA_PIN`  \n\n---\n```cpp\n#define DATA_PIN 8\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":8,"line":12}}}}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":12,"character":7}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/39","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/39","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/39","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/39","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/39","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/39","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/39","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/39","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/39","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/39","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/39","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/39","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/39","percentage":23}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/39","percentage":23}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/39","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/39","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/39","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/39","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/39","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/39","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/39","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/39","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/39","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/39","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/39","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/39","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/39","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/39","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/39","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/39","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/39","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/39","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/39","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/39","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/39","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/39","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/39","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/39","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/39","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/39","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/39","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/39","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/39","percentage":61}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/39","percentage":61}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/39","percentage":64}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/39","percentage":64}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/39","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/39","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/39","percentage":69}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/39","percentage":69}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/39","percentage":71}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/39","percentage":71}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/39","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/39","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/39","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/39","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/39","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/39","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/39","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/39","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/39","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/39","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/39","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/39","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/39","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/39","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/39","percentage":97}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":16,"character":12}}}
<<<
Content-Length: 219

{"id":"6","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `Echo_PIN`  \n\n---\n```cpp\n#define Echo_PIN 13\n```"},"range":{"end":{"character":16,"line":16},"start":{"character":8,"line":16}}}}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":17,"character":6}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":24,"character":19}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":24,"character":16}}}
<<<
Content-Length: 287

{"id":"9","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Forward`  \n\n---\nType: `const int`  \nValue = `92 (0x5c)`  \nforward  \n\n---\n```cpp\nconst int Forward = 92\n```"},"range":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":24,"character":60}}}
<<<
Content-Length: 41

{"id":"10","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3189514816/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":24,"character":59}}}
<<<
Content-Length: 41

{"id":"11","jsonrpc":"2.0","result":null}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"12","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"12","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3231

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":14936,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server632179475\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16553

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}
<<<
Content-Length: 187

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 222

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":2,"character":10}}}
<<<
Content-Length: 40

{"id":"2","jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":18,"character":34}}}
<<<
Content-Length: 38

{"id":"3","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":"4","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":18,"character":34},"end":{"line":18,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"4","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server632179475/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":24,"character":44}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}
>>>
Content-Length: 60

{"jsonrpc":"2.0","id":"6","method":"shutdown","params":null}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3232

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":9960,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server3480426115\\sketch","rootUri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 16554

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":18,"character":34},"end":{"line":18,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 188

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 223

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 216

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}
<<<
Content-Length: 11197

{"id":"3","jsonrpc":"2.0","result":[{"detail":"Servo","kind":13,"name":"MOTORservo","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":16,"line":22},"start":{"character":6,"line":22}}},{"detail":"const int","kind":13,"name":"Forward","range":{"end":{"character":28,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":17,"line":24},"start":{"character":10,"line":24}}},{"detail":"const int","kind":13,"name":"Backward","range":{"end":{"character":29,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":18,"line":25},"start":{"character":10,"line":25}}},{"detail":"const int","kind":13,"name":"Turn_Left","range":{"end":{"character":29,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}}},{"detail":"const int","kind":13,"name":"Turn_Right","range":{"end":{"character":29,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}},{"detail":"const int","kind":13,"name":"Top_Left","range":{"end":{"character":28,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}},{"detail":"const int","kind":13,"name":"Bottom_Left","range":{"end":{"character":29,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":10,"line":29}}},{"detail":"const int","kind":13,"name":"Top_Right","range":{"end":{"character":28,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":19,"line":30},"start":{"character":10,"line":30}}},{"detail":"const int","kind":13,"name":"Bottom_Right","range":{"end":{"character":28,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":22,"line":31},"start":{"character":10,"line":31}}},{"detail":"const int","kind":13,"name":"Stop","range":{"end":{"character":27,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":14,"line":32},"start":{"character":10,"line":32}}},{"detail":"const int","kind":13,"name":"Contrarotate","range":{"end":{"character":29,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":22,"line":33},"start":{"character":10,"line":33}}},{"detail":"const int","kind":13,"name":"Clockwise","range":{"end":{"character":28,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":10,"line":34}}},{"detail":"const int","kind":13,"name":"Moedl1","range":{"end":{"character":28,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}}},{"detail":"const int","kind":13,"name":"Moedl2","range":{"end":{"character":28,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}}},{"detail":"const int","kind":13,"name":"Moedl3","range":{"end":{"character":28,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}}},{"detail":"const int","kind":13,"name":"Moedl4","range":{"end":{"character":28,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}}},{"detail":"const int","kind":13,"name":"MotorLeft","range":{"end":{"character":29,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":19,"line":39},"start":{"character":10,"line":39}}},{"detail":"const int","kind":13,"name":"MotorRight","range":{"end":{"character":29,"line":40},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":20,"line":40},"start":{"character":10,"line":40}}},{"detail":"int","kind":13,"name":"Left_Tra_Value","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":18,"line":42},"start":{"character":4,"line":42}}},{"detail":"int","kind":13,"name":"Center_Tra_Value","range":{"end":{"character":20,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":20,"line":43},"start":{"character":4,"line":43}}},{"detail":"int","kind":13,"name":"Right_Tra_Value","range":{"end":{"character":19,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":19,"line":44},"start":{"character":4,"line":44}}},{"detail":"int","kind":13,"name":"Black_Line","range":{"end":{"character":20,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}}},{"detail":"int","kind":13,"name":"leftDistance","range":{"end":{"character":20,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":16,"line":47},"start":{"character":4,"line":47}}},{"detail":"int","kind":13,"name":"middleDistance","range":{"end":{"character":22,"line":48},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":18,"line":48},"start":{"character":4,"line":48}}},{"detail":"int","kind":13,"name":"rightDistance","range":{"end":{"character":21,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":17,"line":49},"start":{"character":4,"line":49}}},{"detail":"byte[3]","kind":13,"name":"RX_package","range":{"end":{"character":24,"line":51},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":15,"line":51},"start":{"character":5,"line":51}}},{"detail":"uint16_t","kind":13,"name":"angle","range":{"end":{"character":19,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":14,"line":52},"start":{"character":9,"line":52}}},{"detail":"byte","kind":13,"name":"order","range":{"end":{"character":17,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":10,"line":53},"start":{"character":5,"line":53}}},{"detail":"char","kind":13,"name":"model_var","range":{"end":{"character":18,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":14,"line":54},"start":{"character":5,"line":54}}},{"detail":"int","kind":13,"name":"UT_distance","range":{"end":{"character":19,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":15,"line":55},"start":{"character":4,"line":55}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":60},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":9,"line":60},"start":{"character":5,"line":60}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":29,"line":62},"start":{"character":0,"line":62}},"selectionRange":{"end":{"character":16,"line":62},"start":{"character":5,"line":62}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":18,"line":64},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":16,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":18,"line":66},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":16,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":18,"line":68},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":16,"line":68},"start":{"character":5,"line":68}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":16,"line":70},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":14,"line":70},"start":{"character":5,"line":70}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":17,"line":72},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":15,"line":72},"start":{"character":5,"line":72}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":30,"line":74},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":10,"line":74},"start":{"character":5,"line":74}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":30,"line":76},"start":{"character":0,"line":76}},"selectionRange":{"end":{"character":10,"line":76},"start":{"character":6,"line":76}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":18,"line":78},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":16,"line":78},"start":{"character":5,"line":78}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":104},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":10,"line":80},"start":{"character":5,"line":80}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":106}},"selectionRange":{"end":{"character":9,"line":106},"start":{"character":5,"line":106}}},{"detail":"void (byte)","kind":12,"name":"model1_func","range":{"end":{"character":1,"line":173},"start":{"character":0,"line":127}},"selectionRange":{"end":{"character":16,"line":127},"start":{"character":5,"line":127}}},{"detail":"void ()","kind":12,"name":"model2_func","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":175}},"selectionRange":{"end":{"character":16,"line":175},"start":{"character":5,"line":175}}},{"detail":"void ()","kind":12,"name":"model3_func","range":{"end":{"character":1,"line":330},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":16,"line":305},"start":{"character":5,"line":305}}},{"detail":"void ()","kind":12,"name":"model4_func","range":{"end":{"character":1,"line":362},"start":{"character":0,"line":332}},"selectionRange":{"end":{"character":16,"line":332},"start":{"character":5,"line":332}}},{"detail":"void ()","kind":12,"name":"motorleft","range":{"end":{"character":1,"line":369},"start":{"character":0,"line":363}},"selectionRange":{"end":{"character":14,"line":363},"start":{"character":5,"line":363}}},{"detail":"void ()","kind":12,"name":"motorright","range":{"end":{"character":1,"line":376},"start":{"character":0,"line":370}},"selectionRange":{"end":{"character":15,"line":370},"start":{"character":5,"line":370}}},{"detail":"void (int, int)","kind":12,"name":"Motor","range":{"end":{"character":1,"line":387},"start":{"character":0,"line":378}},"selectionRange":{"end":{"character":10,"line":378},"start":{"character":5,"line":378}}},{"detail":"float (int, int)","kind":12,"name":"SR04","range":{"end":{"character":1,"line":400},"start":{"character":0,"line":389}},"selectionRange":{"end":{"character":10,"line":389},"start":{"character":6,"line":389}}},{"detail":"void ()","kind":12,"name":"RXpack_func","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":402}},"selectionRange":{"end":{"character":16,"line":402},"start":{"character":5,"line":402}}}]}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":37,"character":60}}}
<<<
Content-Length: 40

{"id":"4","jsonrpc":"2.0","result":null}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":5},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"5","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":241,"character":32},"end":{"line":241,"character":32}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"5","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"6","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":239,"character":23},"end":{"line":239,"character":23}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"6","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"7","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":234,"character":13},"end":{"line":234,"character":13}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"7","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"position":{"line":231,"character":9}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":6},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"9","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":239,"character":23},"end":{"line":239,"character":23}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"9","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":7},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"10","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":240,"character":28},"end":{"line":240,"character":28}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"10","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"}}}Content-Length: 16558

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp","version":8},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\n#include    \u003cServo.h\u003e\n\n// servo control pin\n#define MOTOR_PIN           9\n// PWM control pin\n#define PWM1_PIN            5\n#define PWM2_PIN            6\n// 74HCT595N chip pin\n#define SHCP_PIN            2                               // The displacement of the clock\n#define EN_PIN              7                               // Can make control\n#define DATA_PIN            8                               // Serial data\n#define STCP_PIN            4                               // Memory register clock            \n// 超声波控制引脚\n#define Trig_PIN            12\n#define Echo_PIN            13\n// 循迹控制引脚\n#define LEFT_LINE_TRACJING      A0\n#define CENTER_LINE_TRACJING    A1\n#define right_LINE_TRACJING     A2\n\nServo MOTORservo;\n\nconst int Forward       = 92;                               // forward\nconst int Backward      = 163;                              // back\nconst int Turn_Left     = 149;                              // left translation\nconst int Turn_Right    = 106;                              // Right translation \nconst int Top_Left      = 20;                               // Upper left mobile\nconst int Bottom_Left   = 129;                              // Lower left mobile\nconst int Top_Right     = 72;                               // Upper right mobile\nconst int Bottom_Right  = 34;                               // The lower right move\nconst int Stop          = 0;                                // stop\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\nconst int Clockwise     = 83;                               // Rotate clockwise\nconst int Moedl1        = 25;                               // model1\nconst int Moedl2        = 26;                               // model2\nconst int Moedl3        = 27;                               // model3\nconst int Moedl4        = 28;                               // model4\nconst int MotorLeft     = 230;                              // servo turn left\nconst int MotorRight    = 231;                              // servo turn right\n\nint Left_Tra_Value;\nint Center_Tra_Value;\nint Right_Tra_Value;\nint Black_Line = 400;\n\nint leftDistance = 0;\nint middleDistance = 0;\nint rightDistance = 0;\n\nbyte RX_package[3] = {0};\nuint16_t angle = 90;\nbyte order = Stop;\nchar model_var = 0;\nint UT_distance = 0;\n\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup();\n#line 82 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid loop();\n#line 103 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model1_func(byte orders);\n#line 151 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model2_func();\n#line 281 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model3_func();\n#line 308 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid model4_func();\n#line 339 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorleft();\n#line 346 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid motorright();\n#line 354 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid Motor(int Dir, int Speed);\n#line 365 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nfloat SR04(int Trig, int Echo);\n#line 378 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid RXpack_func();\n#line 56 \"E:\\\\5-教程\\\\1.tutorial\\\\ZYC0076拍照麦克轮WiFi小车\\\\ZYC0076\\\\ZYC0076-EN\\\\4_Arduino_Code\\\\6.2_Arduino_UNO\\\\6.2_Arduino_UNO.ino\"\nvoid setup()\n{\n    Serial.setTimeout(10);\n    Serial.begin(115200);\n\n    MOTORservo.attach(MOTOR_PIN);\n\n    pinMode(SHCP_PIN, OUTPUT);\n    pinMode(EN_PIN, OUTPUT);\n    pinMode(DATA_PIN, OUTPUT);\n    pinMode(STCP_PIN, OUTPUT);\n    pinMode(PWM1_PIN, OUTPUT);\n    pinMode(PWM2_PIN, OUTPUT);\n\n    pinMode(Trig_PIN, OUTPUT);\n    pinMode(Echo_PIN, INPUT);\n\n    pinMode(LEFT_LINE_TRACJING, INPUT);\n    pinMode(CENTER_LINE_TRACJING, INPUT);\n    pinMode(right_LINE_TRACJING, INPUT);\n\n    MOTORservo.write(angle);\n\n    Motor(Stop, 0);\n}\n\nvoid loop()\n{\n    RXpack_func();\n    switch (model_var)\n    {\n    case 0:\n        model1_func(order);\n        break;\n    case 1:\n        model2_func();      // OA model\n        break;\n    case 2:\n        model3_func();      // follow model\n        break;\n    case 3:\n        model4_func();      // Tracking model\n        break;\n    }\n    \n}\n\nvoid model1_func(byte orders)\n{\n    switch (orders)\n    {\n    case Stop:\n        Motor(Stop, 0);\n        break;\n    case Forward:\n        Motor(Forward, 250);\n        break;\n    case Backward:\n        Motor(Backward, 250);\n        break;\n    case Turn_Left:\n        Motor(Turn_Left, 250);\n        break;\n    case Turn_Right:\n        Motor(Turn_Right, 250);\n        break;\n    case Top_Left:\n        Motor(Top_Left, 250);\n        break;\n    case Top_Right:\n        Motor(Top_Right, 250);\n        break;\n    case Bottom_Left:\n        Motor(Bottom_Left, 250);\n        break;\n    case Bottom_Right:\n        Motor(Bottom_Right, 250);\n        break;\n    case Clockwise:\n        Motor(Clockwise, 250);\n        break;\n    case MotorLeft:\n        motorleft();\n        break;\n    case MotorRight:\n        motorright();\n        break;\n    default:\n        // Serial.println(\".\");\n        order = 0;\n        Motor(Stop, 0);\n        break;\n    }\n}\n\nvoid model2_func()      // OA\n{\n    MOTORservo.write(90);\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    middleDistance = UT_distance;\n\n    if (middleDistance \u003c= 25) \n    {\n        Motor(Stop, 0);\n        for(int i = 0;i \u003c 500;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(10);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"rightDistance:  \");\n        Serial.println(rightDistance);\n        MOTORservo.write(90);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        MOTORservo.write(170);\n        for(int i = 0;i \u003c 300;i++){\n          delay(1);\n          RXpack_func();\n          if(model_var != 1)\n            return ;\n        }\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\n        Serial.print(\"leftDistance:  \");\n        Serial.println(leftDistance);\n        MOTORservo.write(90);\n        if((rightDistance \u003c 20) \u0026\u0026 (leftDistance \u003c 20)){\n\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 1000;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else if(rightDistance \u003c leftDistance) {\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 100;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Contrarotate, 250);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }//turn right\n        else if(rightDistance \u003e leftDistance){\n            Motor(Stop, 0);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n        else{\n            Motor(Backward, 180);\n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n            Motor(Clockwise, 250); \n            for(int i = 0;i \u003c 500;i++){\n              delay(1);\n              RXpack_func();\n              if(model_var != 1)\n                return ;\n            }\n        }\n    }\n    else \n    {\n        Motor(Forward, 250);\n    }\n}\n\nvoid model3_func()      // follow model\n{\n    MOTORservo.write(90);  \n    UT_distance = SR04(Trig_PIN, Echo_PIN);\n    Serial.println(UT_distance);\n    if (UT_distance \u003c 15)\n    {\n        Motor(Backward, 200);\n    }\n    else if (15 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 20)\n    {\n        Motor(Stop, 0);\n    }\n    else if (20 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 25)\n    {\n        Motor(Forward, 180);\n    }\n    else if (25 \u003c= UT_distance \u0026\u0026 UT_distance \u003c= 50)\n    {\n        Motor(Forward, 220);\n    }\n    else\n    {\n        Motor(Stop, 0);\n    }\n}\n\nvoid model4_func()      // tracking model\n{\n    MOTORservo.write(90);\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\n    if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Forward, 250);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003c Black_Line)\n    {\n        Motor(Contrarotate, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003c Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 250);\n    }\n    else if (Left_Tra_Value \u003c Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Clockwise, 220);\n    }\n    else if (Left_Tra_Value \u003e= Black_Line \u0026\u0026 Center_Tra_Value \u003e= Black_Line \u0026\u0026 Right_Tra_Value \u003e= Black_Line)\n    {\n        Motor(Stop, 0);\n    }\n}\nvoid motorleft()  //servo\n{\n    MOTORservo.write(angle);\n    angle+=1;\n    if(angle \u003e= 180) angle = 180;\n    delay(10);\n}\nvoid motorright() //servo\n{\n    MOTORservo.write(angle);\n    angle-=1;\n    if(angle \u003c= 1) angle = 1;\n    delay(10);\n}\n\nvoid Motor(int Dir, int Speed)      // motor drive\n{\n    digitalWrite(EN_PIN, LOW);\n    analogWrite(PWM1_PIN, Speed);\n    analogWrite(PWM2_PIN, Speed);\n\n    digitalWrite(STCP_PIN, LOW);\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\n    digitalWrite(STCP_PIN, HIGH);\n}\n\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\n{\n    digitalWrite(Trig, LOW);\n    delayMicroseconds(2);\n    digitalWrite(Trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(Trig, LOW);\n    float distance = pulseIn(Echo, HIGH) / 58.00;\n    delay(10);\n    \n    return distance;\n}\n\nvoid RXpack_func()  //Receive data\n{\n    if(Serial.available() \u003e 0)\n    {\n        delay(1);                                           // delay 1MS\n        if(Serial.readBytes(RX_package, 3))\n        {\n            if (RX_package[0] == 0xA5 \u0026\u0026 RX_package[2] == 0x5A)     // The header and tail of the packet are verified\n            {\n                order = RX_package[1];\n                if(order == Moedl1) \n                {\n                    model_var = 0;\n                }\n                else if (order == Moedl2)\n                {\n                    model_var = 1;\n                }\n                else if (order == Moedl3)\n                {\n                    model_var = 2;\n                }\n                else if (order == Moedl4)\n                {\n                    model_var = 3;\n                }\n                //////////////////////////////\n                // switch (RX_package[1])\n                // {\n                // case Stop:\n                //     Serial.println(\"Stop\");\n                //     break;\n                // case Forward:\n                //     Serial.println(\"Forward\");\n                //     break;\n                // case Backward:\n                //     Serial.println(\"Backward\");\n                //     break;\n                // case Turn_Left:\n                //     Serial.println(\"Turn_Left\");\n                //     break;\n                // case Turn_Right:\n                //     Serial.println(\"Turn_Right\");\n                //     break;\n                // case Top_Left:\n                //     Serial.println(\"Top_Left\");\n                //     break;\n                // case Bottom_Left:\n                //     Serial.println(\"Bottom_Left\");\n                //     break;\n                // case Top_Right:\n                //     Serial.println(\"Top_Right\");\n                //     break;\n                // case Bottom_Right:\n                //     Serial.println(\"Bottom_Right\");\n                //     break;\n                // case Clockwise:\n                //     Serial.println(\"Clockwise\");\n                //     break;\n                // case MotorLeft:\n                //     Serial.println(\"MotorLeft\");\n                //     break;\n                // case MotorRight:\n                //     Serial.println(\"MotorRight\");\n                //     break;\n                // case Moedl1:\n                //     Serial.println(\"Moedl1\");\n                //     break;\n                // case Moedl2:\n                //     Serial.println(\"Moedl2\");\n                //     break;\n                // case Moedl3:\n                //     Serial.println(\"Moedl3\");\n                //     break;\n                // case Moedl4:\n                //     Serial.println(\"Moedl4\");\n                //     break;\n                // default:\n                //     break;\n                // }\n            }\n        }\n    }\n}\n\n"}]}}
<<<
Content-Length: 111

{"id":6,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"11","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Administrator/AppData/Local/Temp/arduino-language-server3480426115/sketch/6.2_Arduino_UNO.ino.cpp"},"range":{"start":{"line":243,"character":13},"end":{"line":243,"character":13}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"11","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"12","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"12","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}